sampler2D font : NPCOLORMAP0;

struct INPUTDATA
{
	float4 position		: POSITION;
	float2 texcoord		: TEXCOORD0;
};

struct VOUTPUTDATA
{
	float4 position			: POSITION;
	float2 texcoord			: TEXCOORD0;
};

struct FOUTPUTDATA
{
	float4 color		: COLOR0;
};


//--------------------------------------------------------------------------------------
// Vertex Shaders
//--------------------------------------------------------------------------------------


VOUTPUTDATA mvertexshader(INPUTDATA IN)
{
	VOUTPUTDATA OUT;
	
    OUT.position = IN.position;
	OUT.texcoord = IN.texcoord;
	
	return OUT;
}


//--------------------------------------------------------------------------------------
// Pixel Shaders
//--------------------------------------------------------------------------------------


FOUTPUTDATA mfragmentshader(VOUTPUTDATA IN)
{
	FOUTPUTDATA OUT;
	
	float4 fontcolor = tex2D(font, IN.texcoord);
    //OUT.color = float4(1.0f, 0.0f, 0.0f, 1.0f);
    OUT.color = fontcolor;

    return OUT;
}


//--------------------------------------------------------------------------------------
// Techniques
//--------------------------------------------------------------------------------------


technique render
{
    pass
    {
		FragmentProgram = compile fp40 mfragmentshader();
		VertexProgram = compile vp40 mvertexshader();
    }
}

