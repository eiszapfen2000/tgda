#version 150

in vec2 out_texcoords;

void main()
{
    int kernelWidth = 2 * kernelRadius + 1;
    ivec2 sourceSize = textureSize(source, 0);
    vec2 v = vec2(sourceSize);
    vec2 sourceDxy = vec2(1.0 / v.x, 1.0 / v.y);

    int kstart = -kernelRadius;
    int kend   =  kernelRadius + 1;
    float result = 0.0;

    for (int i = kstart; i < kend; i++)
    {
        for (int j = kstart; j < kend; j++)
        {
            int indexki = i + kernelRadius;
            int indexkj = j + kernelRadius;
            int indexk  = indexki * kernelWidth + indexkj;
            float fi = i;
            float fj = j;

            vec2 sourceCoords = out_texcoords + vec2(fj * sourceDxy.x, fi * sourceDxy.y);

            float ks = texelFetch(kernel, indexk).r;
            float ss = textureLod(source, sourceCoords, 0).r;

            result += (ks * ss);
        }
    }

    target = vec4(result);
}
