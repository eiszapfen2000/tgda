effect "default":

technique "texture"
{
    # effect variables
    uniform mat4 np_modelviewprojectionmatrix;
    uniform sampler2D colormap
    {
        WrapS = ClampToEdge;
        WrapT = ClampToEdge;
        MinFilter = Linear;
        MagFilter = Linear;
    };

    # vertex streams
    in vec4 in_position : 0;
    in vec2 in_texcoords : 3;

    # fragment streams
    out vec4 target : 0;

    # shaders
    set vertex shader "simpletextured.vertex"
    set fragment shader "simpletextured.fragment"
}

technique "fluid"
{
    # effect variables
    uniform mat4 np_modelviewprojectionmatrix;
    uniform vec2 heightRange;
    uniform vec2 sourceRange;
    uniform sampler2D heightmap
    {
        WrapS = ClampToEdge;
        WrapT = ClampToEdge;
        MinFilter = Linear;
        MagFilter = Linear;
    };
    uniform sampler2D sourcemap
    {
        WrapS = ClampToEdge;
        WrapT = ClampToEdge;
        MinFilter = Linear;
        MagFilter = Linear;
    };
    uniform sampler2D obstructionmap
    {
        WrapS = ClampToEdge;
        WrapT = ClampToEdge;
        MinFilter = Linear;
        MagFilter = Linear;
    };
    uniform samplerBuffer kernelmap;

    # vertex streams
    in vec4 in_position : 0;
    in vec2 in_texcoords : 3;
    # fragment streams
    out vec4 target : 0;
    # shaders
    set vertex shader "fluid.vertex"
    set fragment shader "fluid.fragment"
}

technique "convolution"
{
    # effect variables
    uniform mat4 np_modelviewprojectionmatrix;
    uniform sampler2D source;
    {
        WrapS = ClampToBorder;
        WrapT = ClampToBorder;
        MinFilter = Nearest;
        MagFilter = Nearest;
    };
    uniform samplerBuffer kernel;
    uniform int kernelRadius;
    # vertex streams
    in vec4 in_position  : 0;
    in vec2 in_texcoords : 3;
    # fragment streams
    out vec4 target : 0;
    # shaders
    set vertex   shader "convolution.vertex"
    set fragment shader "convolution.fragment"

}




