effect "Projected Grid":

technique "proj_grid_tf_transform"
{
    # effect variables
    uniform mat4 np_modelviewprojectionmatrix;
    uniform mat4 invMVP;
    uniform float area;
    uniform float displacementScale;
    uniform sampler2D heightmap
    {
        WrapS = Repeat;
        WrapT = Repeat;
        MinFilter = Linear;
        MagFilter = Linear;
    };
    uniform sampler2D displacement
    {
        WrapS = Repeat;
        WrapT = Repeat;
        MinFilter = Linear;
        MagFilter = Linear;
    };
    uniform sampler2D gradient
    {
        WrapS = Repeat;
        WrapT = Repeat;
        MinFilter = Linear;
        MagFilter = Linear;
    };

    # vertex streams
    in vec2 in_position : 0;
    # shaders
    set vertex shader "proj_grid_tf_transform.vertex"
}

technique "proj_grid_tf_feedback"
{
    # effect variables
    uniform mat4 np_modelviewprojectionmatrix;
    uniform float area;
    uniform vec3 cameraPosition;
    uniform sampler2D heightmap
    {
        WrapS = Repeat;
        WrapT = Repeat;
        MinFilter = Linear;
        MagFilter = Linear;
    };
    uniform sampler2D displacement
    {
        WrapS = Repeat;
        WrapT = Repeat;
        MinFilter = Linear;
        MagFilter = Linear;
    };
    uniform sampler2D gradient
    {
        WrapS = Repeat;
        WrapT = Repeat;
        MinFilter = Linear;
        MagFilter = Linear;
    };
    uniform sampler3D variance
    {
        WrapS = ClampToEdge;
        WrapT = ClampToEdge;
        MinFilter = Linear;
        MagFilter = Linear;
    };
    # vertex streams
    in vec3 in_position : 0;
    in vec2 in_non_disp_position : 1;
    # fragment streams
    out vec4 target : 0;
    # shaders
    set vertex shader "proj_grid_tf_feedback.vertex"
    set fragment shader "proj_grid_tf_feedback.fragment"
}

