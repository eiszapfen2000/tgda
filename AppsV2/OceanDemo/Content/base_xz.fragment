#version 150

in vec3 out_ws_pos;
in vec3 out_normal;

#define MATH_PI 3.14159

void main()
{
    vec3 lightPos = vec3(0.0, 120.0, 0.0);
    //vec3 lightDir = normalize(vec3(-1.0, 1.0, 0.0));
    vec3 lightDir = normalize(lightPos - out_ws_pos);
    vec3 viewDir  = normalize(cameraPosition - out_ws_pos);
    //vec3 normal   = normalize(vec3(-out_gradients.x, 1.0, -out_gradients.y));
    vec3 normal   = normalize(out_normal);
    vec3 h        = normalize(viewDir + lightDir);
    vec3 r        = 2.0 * dot(lightDir, normal) * normal - lightDir;

    vec3 c_light = vec3(1.0, 1.0, 1.0);
    vec3 c_diff = vec3(0.1, 0.5, 1.0);
    vec3 c_spec = vec3(0.1, 0.5, 1.0);
    float alpha_p = 5.0;

    float n_dot_l = clamp(dot(normal, lightDir), 0.0, 1.0);
    float n_dot_h = clamp(dot(normal, h)       , 0.0, 1.0);

    vec3 f_lambert = c_diff / MATH_PI;
    vec3 L_zero = (f_lambert * MATH_PI) * (c_light * clamp(dot(normal, lightDir), 0.0, 1.0));
    //vec3 L_zero = (c_spec * pow(n_dot_h, alpha_p)) * (c_light * n_dot_l);

    // from linear to gamma corrected
    vec3 diffuse = pow(L_zero, vec3(1.0 / 2.2));

    target = vec4(diffuse, 1.0);
    //target = vec4(1.0);
}

